def fixed_sliding_window(arr, k):
    # k is the fixed size
    # this is an O(n) algortihm (O(2n) from sum() and for loop)
    results = []

    curr_subarray = sum(arr[:k])
    results.append(curr_subarray)

    for i in range(1, len(arr)-k-1):
        curr_subarray = curr_subarray - arr[i-1] + arr[i+k-1]
        results.append(curr_subarray)


def dynamic_sliding_window(arr, x):
    curr_sum, min_len = 0, float('inf')
    start, end = 0, 0

    while(end < len(arr)):
        curr_sum = curr_sum + arr[end]
        end += 1

        while(curr_sum >= x and start < end):
            curr_sum = curr_sum - arr[start]
            start += 1

            min_len = min(min_len, end-start+1)

    return min_len